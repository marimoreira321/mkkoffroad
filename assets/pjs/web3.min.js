(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
'use strict';

web3 = new Web3j("http://127.0.0.1:8545");

var data = {
    accounts: []
};

var eth3 = new Vue({
    el: '#web3',
    data: data,

    methods: {
        getAccounts: function getAccounts() {

            setInterval(function () {
                web3.eth.getAccounts().then(function (r) {

                    if (r.length == data.accounts.length) return;
                    var arr = [];

                    r.forEach(function (elem) {
                        var account = {
                            hash: elem,
                            balance: '0 ETH'
                        };
                        arr.push(account);
                        console.log(arr);
                    });
                    data.accounts = arr;

                    var i = 0;
                    if (data.accounts.length > 0) {
                        i = 0;
                        $(data.accounts).each(function () {
                            eth3.getBalance(data.accounts[i].hash, i);
                            i++;
                        });
                        i = 0;
                    }
                });
            }, 10000);
            eth3.updateBalances();
        },

        getHashRate: function getHashRate() {
            web3.eth.getHashrate().then(function (r) {
                simpleAlert.show({
                    message: r + ' H/s',
                    type: 'success'
                });
            });
        },
        getBalance: function getBalance(account, idx) {
            web3.eth.getBalance(account).then(function (r) {
                data.accounts[idx].balance = r / 10 ** 18 + ' ETH';
            });
        },

        updateBalances: function updateBalances() {
            setInterval(function () {
                var i = 0;
                if (data.accounts.length > 0) {
                    i = 0;
                    $(data.accounts).each(function () {
                        eth3.getBalance(data.accounts[i].hash, i);
                        i++;
                    });
                    i = 0;
                }
            }, 10000);
        }
    },

    created: function created() {}
});

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJhc3NldHMvanMvd2ViMy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0FDQ0EsT0FBTyxJQUFJLEtBQUosQ0FBVSx1QkFBVixDQUFQOztBQUVBLElBQUksT0FBTztBQUNQLGNBQVU7QUFESCxDQUFYOztBQUlBLElBQUksT0FBTyxJQUFJLEdBQUosQ0FBUTtBQUNmLFFBQUksT0FEVztBQUVmLFVBQU0sSUFGUzs7QUFJZixhQUFTO0FBQ0wscUJBQWEsdUJBQ2I7O0FBRUksd0JBQVksWUFBVTtBQUNsQixxQkFBSyxHQUFMLENBQVMsV0FBVCxHQUF1QixJQUF2QixDQUE0QixVQUFTLENBQVQsRUFBVzs7QUFFbkMsd0JBQUcsRUFBRSxNQUFGLElBQVksS0FBSyxRQUFMLENBQWMsTUFBN0IsRUFBcUM7QUFDckMsd0JBQUksTUFBTSxFQUFWOztBQUVBLHNCQUFFLE9BQUYsQ0FBVyxnQkFBUTtBQUNmLDRCQUFJLFVBQVU7QUFDVixrQ0FBTSxJQURJO0FBRVYscUNBQVM7QUFGQyx5QkFBZDtBQUlBLDRCQUFJLElBQUosQ0FBUyxPQUFUO0FBQ0EsZ0NBQVEsR0FBUixDQUFZLEdBQVo7QUFDSCxxQkFQRDtBQVFBLHlCQUFLLFFBQUwsR0FBaUIsR0FBakI7O0FBRUEsd0JBQUksSUFBSSxDQUFSO0FBQ0Esd0JBQUcsS0FBSyxRQUFMLENBQWMsTUFBZCxHQUF1QixDQUExQixFQUE0QjtBQUN4Qiw0QkFBSSxDQUFKO0FBQ0EsMEJBQUUsS0FBSyxRQUFQLEVBQWlCLElBQWpCLENBQXNCLFlBQVU7QUFDNUIsaUNBQUssVUFBTCxDQUFnQixLQUFLLFFBQUwsQ0FBYyxDQUFkLEVBQWlCLElBQWpDLEVBQXVDLENBQXZDO0FBQ0E7QUFDSCx5QkFIRDtBQUlBLDRCQUFFLENBQUY7QUFDSDtBQUNKLGlCQXhCRDtBQXlCSCxhQTFCRCxFQTBCRSxLQTFCRjtBQTJCQSxpQkFBSyxjQUFMO0FBQ0gsU0FoQ0k7O0FBa0NMLHFCQUFhLHVCQUNiO0FBQ0ksaUJBQUssR0FBTCxDQUFTLFdBQVQsR0FBdUIsSUFBdkIsQ0FBNEIsVUFBUyxDQUFULEVBQVc7QUFDbkMsNEJBQVksSUFBWixDQUFpQjtBQUNiLDZCQUFTLElBQUUsTUFERTtBQUViLDBCQUFNO0FBRk8saUJBQWpCO0FBSUgsYUFMRDtBQU1ILFNBMUNJO0FBMkNMLG9CQUFZLG9CQUFTLE9BQVQsRUFBa0IsR0FBbEIsRUFDWjtBQUNJLGlCQUFLLEdBQUwsQ0FBUyxVQUFULENBQW9CLE9BQXBCLEVBQTZCLElBQTdCLENBQWtDLFVBQVMsQ0FBVCxFQUFXO0FBQ3pDLHFCQUFLLFFBQUwsQ0FBYyxHQUFkLEVBQW1CLE9BQW5CLEdBQTZCLElBQUUsTUFBSSxFQUFOLEdBQVcsTUFBeEM7QUFDSCxhQUZEO0FBR0gsU0FoREk7O0FBa0RMLHdCQUFnQiwwQkFDaEI7QUFDSSx3QkFBWSxZQUFVO0FBQ2xCLG9CQUFJLElBQUksQ0FBUjtBQUNBLG9CQUFHLEtBQUssUUFBTCxDQUFjLE1BQWQsR0FBdUIsQ0FBMUIsRUFBNEI7QUFDeEIsd0JBQUksQ0FBSjtBQUNBLHNCQUFFLEtBQUssUUFBUCxFQUFpQixJQUFqQixDQUFzQixZQUFVO0FBQzVCLDZCQUFLLFVBQUwsQ0FBZ0IsS0FBSyxRQUFMLENBQWMsQ0FBZCxFQUFpQixJQUFqQyxFQUF1QyxDQUF2QztBQUNBO0FBQ0gscUJBSEQ7QUFJQSx3QkFBRSxDQUFGO0FBQ0g7QUFDSixhQVZELEVBVUUsS0FWRjtBQVdIO0FBL0RJLEtBSk07O0FBc0VmLGFBQVMsbUJBQVcsQ0FFbkI7QUF4RWMsQ0FBUixDQUFYIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXtmdW5jdGlvbiByKGUsbix0KXtmdW5jdGlvbiBvKGksZil7aWYoIW5baV0pe2lmKCFlW2ldKXt2YXIgYz1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO2lmKCFmJiZjKXJldHVybiBjKGksITApO2lmKHUpcmV0dXJuIHUoaSwhMCk7dmFyIGE9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitpK1wiJ1wiKTt0aHJvdyBhLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsYX12YXIgcD1uW2ldPXtleHBvcnRzOnt9fTtlW2ldWzBdLmNhbGwocC5leHBvcnRzLGZ1bmN0aW9uKHIpe3ZhciBuPWVbaV1bMV1bcl07cmV0dXJuIG8obnx8cil9LHAscC5leHBvcnRzLHIsZSxuLHQpfXJldHVybiBuW2ldLmV4cG9ydHN9Zm9yKHZhciB1PVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmUsaT0wO2k8dC5sZW5ndGg7aSsrKW8odFtpXSk7cmV0dXJuIG99cmV0dXJuIHJ9KSgpIiwiXG53ZWIzID0gbmV3IFdlYjNqKFwiaHR0cDovLzEyNy4wLjAuMTo4NTQ1XCIpO1xuXG5sZXQgZGF0YSA9IHtcbiAgICBhY2NvdW50czogW11cbn1cblxubGV0IGV0aDMgPSBuZXcgVnVlKHtcbiAgICBlbDogJyN3ZWIzJyxcbiAgICBkYXRhOiBkYXRhLFxuICAgIFxuICAgIG1ldGhvZHM6IHtcbiAgICAgICAgZ2V0QWNjb3VudHM6IGZ1bmN0aW9uKClcbiAgICAgICAge1xuXG4gICAgICAgICAgICBzZXRJbnRlcnZhbChmdW5jdGlvbigpe1xuICAgICAgICAgICAgICAgIHdlYjMuZXRoLmdldEFjY291bnRzKCkudGhlbihmdW5jdGlvbihyKXtcblxuICAgICAgICAgICAgICAgICAgICBpZihyLmxlbmd0aCA9PSBkYXRhLmFjY291bnRzLmxlbmd0aCkgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICBsZXQgYXJyID0gW107XG5cbiAgICAgICAgICAgICAgICAgICAgci5mb3JFYWNoKCBlbGVtID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBhY2NvdW50ID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhhc2g6IGVsZW0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYmFsYW5jZTogJzAgRVRIJ1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgYXJyLnB1c2goYWNjb3VudCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhhcnIpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgZGF0YS5hY2NvdW50cyA9ICBhcnI7XG5cbiAgICAgICAgICAgICAgICAgICAgdmFyIGkgPSAwIDtcbiAgICAgICAgICAgICAgICAgICAgaWYoZGF0YS5hY2NvdW50cy5sZW5ndGggPiAwKXtcbiAgICAgICAgICAgICAgICAgICAgICAgIGkgPSAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgJChkYXRhLmFjY291bnRzKS5lYWNoKGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXRoMy5nZXRCYWxhbmNlKGRhdGEuYWNjb3VudHNbaV0uaGFzaCwgaSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaSsrO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpPTA7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfSwxMDAwMCk7XG4gICAgICAgICAgICBldGgzLnVwZGF0ZUJhbGFuY2VzKCk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgZ2V0SGFzaFJhdGU6IGZ1bmN0aW9uICgpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHdlYjMuZXRoLmdldEhhc2hyYXRlKCkudGhlbihmdW5jdGlvbihyKXtcbiAgICAgICAgICAgICAgICBzaW1wbGVBbGVydC5zaG93KHtcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogcisnIEgvcycsXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJ1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIGdldEJhbGFuY2U6IGZ1bmN0aW9uKGFjY291bnQsIGlkeClcbiAgICAgICAge1xuICAgICAgICAgICAgd2ViMy5ldGguZ2V0QmFsYW5jZShhY2NvdW50KS50aGVuKGZ1bmN0aW9uKHIpe1xuICAgICAgICAgICAgICAgIGRhdGEuYWNjb3VudHNbaWR4XS5iYWxhbmNlID0gci8xMCoqMTggKyAnIEVUSCc7XG4gICAgICAgICAgICB9KVxuICAgICAgICB9LFxuXG4gICAgICAgIHVwZGF0ZUJhbGFuY2VzOiBmdW5jdGlvbigpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHNldEludGVydmFsKGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAgICAgdmFyIGkgPSAwIDtcbiAgICAgICAgICAgICAgICBpZihkYXRhLmFjY291bnRzLmxlbmd0aCA+IDApe1xuICAgICAgICAgICAgICAgICAgICBpID0gMDtcbiAgICAgICAgICAgICAgICAgICAgJChkYXRhLmFjY291bnRzKS5lYWNoKGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAgICAgICAgICAgICBldGgzLmdldEJhbGFuY2UoZGF0YS5hY2NvdW50c1tpXS5oYXNoLCBpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGkrKztcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIGk9MDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LDEwMDAwKVxuICAgICAgICB9XG4gICAgfSxcblxuICAgIGNyZWF0ZWQ6IGZ1bmN0aW9uICgpe1xuICAgICAgICBcbiAgICB9XG59KSJdfQ==
