(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
'use strict';

var response;
var _signUp = {
    execution: '',
    name: '',
    pwd: '',
    email: ''
};

new Vue({
    el: '#signup',
    data: _signUp,

    methods: {

        signUp: function signUp() {

            if (this.name.length <= 0) return simpleAlert.show({ message: 'Precisa preencher seu nome!' });else if (this.email.length <= 0) return simpleAlert.show({ message: 'Precisa preencher seu e-mail!' });else if (this.pwd.length < 6) return simpleAlert.show({ message: 'Sua senha necessita de ao menos 6 caractÃ©res!' });else {
                $.post('/api/usr/signup', _signUp, null, 'json').then(function (r) {
                    _signUp.execution = 'login_execute';
                    if (r.res != null) {
                        response = { message: r.res, alertType: 'success' };
                        $.post('/api/usr/login', _signUp, null, 'json').then(function (r) {
                            if (r.res != null) {
                                response = { message: r.res, alertType: 'success' };
                                $('#login_modal').modal('hide');
                                $('#btnLogout').show();
                                $('#btnLogin').hide();

                                setTimeout(function () {
                                    location.href = "/admin";
                                }, 2000);
                            }
                        });
                    } else if (r.err != null) response = { message: r.err, alertType: 'warn' };

                    simpleAlert.show({
                        message: response.message,
                        type: response.alertType
                    });
                });
            }
        }

    },

    created: function created() {}
});

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJhc3NldHMvanMvc2lnbnVwLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7QUNBQSxJQUFJLFFBQUo7QUFDQSxJQUFJLFVBQVM7QUFDVCxlQUFXLEVBREY7QUFFVCxVQUFNLEVBRkc7QUFHVCxTQUFLLEVBSEk7QUFJVCxXQUFNO0FBSkcsQ0FBYjs7QUFPQSxJQUFJLEdBQUosQ0FBUTtBQUNKLFFBQUksU0FEQTtBQUVKLFVBQU0sT0FGRjs7QUFJSixhQUFTOztBQUVMLGdCQUFRLGtCQUFVOztBQUVkLGdCQUFHLEtBQUssSUFBTCxDQUFVLE1BQVYsSUFBcUIsQ0FBeEIsRUFBMkIsT0FBTyxZQUFZLElBQVosQ0FBaUIsRUFBQyxTQUFTLDZCQUFWLEVBQWpCLENBQVAsQ0FBM0IsS0FDQSxJQUFHLEtBQUssS0FBTCxDQUFXLE1BQVgsSUFBcUIsQ0FBeEIsRUFBMkIsT0FBTyxZQUFZLElBQVosQ0FBaUIsRUFBQyxTQUFTLCtCQUFWLEVBQWpCLENBQVAsQ0FBM0IsS0FDQSxJQUFHLEtBQUssR0FBTCxDQUFTLE1BQVQsR0FBa0IsQ0FBckIsRUFBd0IsT0FBTyxZQUFZLElBQVosQ0FBaUIsRUFBQyxTQUFTLCtDQUFWLEVBQWpCLENBQVAsQ0FBeEIsS0FHQTtBQUNJLGtCQUFFLElBQUYsQ0FBTyxpQkFBUCxFQUEwQixPQUExQixFQUFrQyxJQUFsQyxFQUF3QyxNQUF4QyxFQUFnRCxJQUFoRCxDQUFxRCxVQUFTLENBQVQsRUFBVztBQUM1RCw0QkFBTyxTQUFQLEdBQW1CLGVBQW5CO0FBQ0Esd0JBQUcsRUFBRSxHQUFGLElBQVMsSUFBWixFQUFpQjtBQUNiLG1DQUFXLEVBQUMsU0FBUyxFQUFFLEdBQVosRUFBaUIsV0FBVyxTQUE1QixFQUFYO0FBQ0ksMEJBQUUsSUFBRixDQUFPLGdCQUFQLEVBQXlCLE9BQXpCLEVBQWlDLElBQWpDLEVBQXVDLE1BQXZDLEVBQStDLElBQS9DLENBQW9ELFVBQVMsQ0FBVCxFQUFXO0FBQzFELGdDQUFHLEVBQUUsR0FBRixJQUFTLElBQVosRUFBa0I7QUFDZCwyQ0FBVyxFQUFDLFNBQVMsRUFBRSxHQUFaLEVBQWlCLFdBQVcsU0FBNUIsRUFBWDtBQUNBLGtDQUFFLGNBQUYsRUFBa0IsS0FBbEIsQ0FBd0IsTUFBeEI7QUFDQSxrQ0FBRSxZQUFGLEVBQWdCLElBQWhCO0FBQ0Esa0NBQUUsV0FBRixFQUFlLElBQWY7O0FBRUQsMkNBQVcsWUFBVTtBQUNqQiw2Q0FBUyxJQUFULEdBQWMsUUFBZDtBQUNILGlDQUZELEVBRUUsSUFGRjtBQUlGO0FBQ0oseUJBWkY7QUFjSCxxQkFoQkwsTUFrQkEsSUFBRyxFQUFFLEdBQUYsSUFBUyxJQUFaLEVBQWtCLFdBQVcsRUFBQyxTQUFTLEVBQUUsR0FBWixFQUFpQixXQUFXLE1BQTVCLEVBQVg7O0FBRWxCLGdDQUFZLElBQVosQ0FBaUI7QUFDYixpQ0FBUyxTQUFTLE9BREw7QUFFYiw4QkFBTSxTQUFTO0FBRkYscUJBQWpCO0FBTUgsaUJBNUJEO0FBNkJIO0FBQ0o7O0FBeENJLEtBSkw7O0FBZ0RKLGFBQVMsbUJBQVUsQ0FFbEI7QUFsREcsQ0FBUiIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCl7ZnVuY3Rpb24gcihlLG4sdCl7ZnVuY3Rpb24gbyhpLGYpe2lmKCFuW2ldKXtpZighZVtpXSl7dmFyIGM9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZTtpZighZiYmYylyZXR1cm4gYyhpLCEwKTtpZih1KXJldHVybiB1KGksITApO3ZhciBhPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIraStcIidcIik7dGhyb3cgYS5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGF9dmFyIHA9bltpXT17ZXhwb3J0czp7fX07ZVtpXVswXS5jYWxsKHAuZXhwb3J0cyxmdW5jdGlvbihyKXt2YXIgbj1lW2ldWzFdW3JdO3JldHVybiBvKG58fHIpfSxwLHAuZXhwb3J0cyxyLGUsbix0KX1yZXR1cm4gbltpXS5leHBvcnRzfWZvcih2YXIgdT1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlLGk9MDtpPHQubGVuZ3RoO2krKylvKHRbaV0pO3JldHVybiBvfXJldHVybiByfSkoKSIsInZhciByZXNwb25zZTtcbnZhciBzaWduVXAgPSB7XG4gICAgZXhlY3V0aW9uOiAnJyxcbiAgICBuYW1lOiAnJyxcbiAgICBwd2Q6ICcnLFxuICAgIGVtYWlsOicnXG59XG5cbm5ldyBWdWUoe1xuICAgIGVsOiAnI3NpZ251cCcsXG4gICAgZGF0YTogc2lnblVwLFxuXG4gICAgbWV0aG9kczoge1xuXG4gICAgICAgIHNpZ25VcDogZnVuY3Rpb24oKXtcblxuICAgICAgICAgICAgaWYodGhpcy5uYW1lLmxlbmd0aCA8PSAgMCkgcmV0dXJuIHNpbXBsZUFsZXJ0LnNob3coe21lc3NhZ2U6ICdQcmVjaXNhIHByZWVuY2hlciBzZXUgbm9tZSEnfSk7IGVsc2VcbiAgICAgICAgICAgIGlmKHRoaXMuZW1haWwubGVuZ3RoIDw9IDApIHJldHVybiBzaW1wbGVBbGVydC5zaG93KHttZXNzYWdlOiAnUHJlY2lzYSBwcmVlbmNoZXIgc2V1IGUtbWFpbCEnfSk7IGVsc2VcbiAgICAgICAgICAgIGlmKHRoaXMucHdkLmxlbmd0aCA8IDYpIHJldHVybiBzaW1wbGVBbGVydC5zaG93KHttZXNzYWdlOiAnU3VhIHNlbmhhIG5lY2Vzc2l0YSBkZSBhbyBtZW5vcyA2IGNhcmFjdMOpcmVzISd9KTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgZWxzZSBcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAkLnBvc3QoJy9hcGkvdXNyL3NpZ251cCcsIHNpZ25VcCwgbnVsbCwgJ2pzb24nKS50aGVuKGZ1bmN0aW9uKHIpe1xuICAgICAgICAgICAgICAgICAgICBzaWduVXAuZXhlY3V0aW9uID0gJ2xvZ2luX2V4ZWN1dGUnOyAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgaWYoci5yZXMgIT0gbnVsbCl7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXNwb25zZSA9IHttZXNzYWdlOiByLnJlcywgYWxlcnRUeXBlOiAnc3VjY2Vzcyd9OyBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkLnBvc3QoJy9hcGkvdXNyL2xvZ2luJywgc2lnblVwLCBudWxsLCAnanNvbicpLnRoZW4oZnVuY3Rpb24ocil7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZihyLnJlcyAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2UgPSB7bWVzc2FnZTogci5yZXMsIGFsZXJ0VHlwZTogJ3N1Y2Nlc3MnfTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKCcjbG9naW5fbW9kYWwnKS5tb2RhbCgnaGlkZScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoJyNidG5Mb2dvdXQnKS5zaG93KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJCgnI2J0bkxvZ2luJykuaGlkZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbG9jYXRpb24uaHJlZj1cIi9hZG1pblwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LDIwMDApXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIH1lbHNlXG5cbiAgICAgICAgICAgICAgICAgICAgaWYoci5lcnIgIT0gbnVsbCkgcmVzcG9uc2UgPSB7bWVzc2FnZTogci5lcnIsIGFsZXJ0VHlwZTogJ3dhcm4nfTtcbiAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgc2ltcGxlQWxlcnQuc2hvdyh7XG4gICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiByZXNwb25zZS5tZXNzYWdlLFxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogcmVzcG9uc2UuYWxlcnRUeXBlXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuXG5cbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgfSxcblxuICAgIGNyZWF0ZWQ6IGZ1bmN0aW9uKCl7XG5cbiAgICB9XG59KTtcblxuIl19
